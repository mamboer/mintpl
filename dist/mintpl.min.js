/*!
 * mintpl 1.0.0
 * MinTpl.JS - A library agnostic, Minimal Javascript Template Engine, inspired by John Resig&#39;s micro templating code snippet.
 * @Author Levin Van <github.com/mamboer> 
 */
!function(t,n){"object"==typeof exports?module.exports=n():"function"==typeof define&&define.amd?define(n):t.mintpl=n()}(this,function(){"use strict";function t(t){this.text=t.toString().split("\n").slice(1,-1).join("\n")+"\n"}function n(i,r){if(i instanceof t)return n(i.val(),r);if("function"==typeof i)return n(new t(i),r);var p=/\W/.test(i)?new Function("obj","var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('"+i.replace(/[\r\t\n]/g," ").split("<%").join("	").replace(/((^|%>)[^\t]*)'/g,"$1\r").replace(/\t=(.*?)%>/g,"',$1,'").split("	").join("');").split("%>").join("p.push('").split("\r").join("\\'")+"');}return p.join('');"):e[i]=e[i]||n(document.getElementById(i).innerHTML);return r?p(r):p}t.prototype={stripPattern:/^[ \t]*(?=[^\s]+)/gm,val:function(){var t=this.text,n=t.match(this.stripPattern).reduce(function(t,n){return Math.min(t,n.length)},1/0),e=new RegExp("^[ \\t]{"+n+"}","mg");return n>0?t.replace(e,""):t}};var e={},i={heredoc:t,render:n};return i});